name: Continuous Integration
permissions: read-all

on:
  pull_request:
    branches:
      - main
      - devs/**

jobs:
  linters:
    timeout-minutes: 5
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout üõéÔ∏è
        uses: actions/checkout@v4.1.7

      - name: Setup Python üîß
        uses: actions/setup-python@v5.1.1
        with:
          python-version: 3.12.5

      - name: Download actionlint
        id: get_actionlint
        # yamllint disable-line rule:line-length
        run: bash <(curl https://raw.githubusercontent.com/rhysd/actionlint/main/scripts/download-actionlint.bash) 1.7.1

      - name: Test üîç
        run: |
          # nosemgrep: generic.ci.security.use-frozen-lockfile.use-frozen-lockfile-pip
          pip install semgrep yamllint
          semgrep --config=auto --error
          yamllint .
          ${{ steps.get_actionlint.outputs.executable }} -color

  validate_orb:
    timeout-minutes: 5
    runs-on: ubuntu-22.04
    services:
#      mockServer:
#        image: mockserver/mockserver:5.15.0
#        ports:
#          - 1080:1080
#        volumes:
#          - ${{ github.workspace }}/zfixtures:/config
#        env:
#          MOCKSERVER_LOG_LEVEL: DEBUG
#          MOCKSERVER_INITIALIZATION_JSON_PATH: /config/expectationInitializer.json
    steps:
      - name: Checkout üõéÔ∏è
        uses: actions/checkout@v4.1.7

      - name: Start mockServer with expectation initializer
        run: |
          docker-compose up -d
          sleep 1
          docker compose logs

      - name: Ensure zfixtures directory exists
        run: |
          ls -la ${{ github.workspace }}/zfixtures
          cat ${{ github.workspace }}/zfixtures/expectationInitializer.json

      - name: Install CircleCI CLI
        run: curl -fLSs https://raw.githubusercontent.com/CircleCI-Public/circleci-cli/main/install.sh | bash

      - name: Validate Orb
        run: |
          circleci orb pack src > orb.yml
          circleci orb validate orb.yml

      - name: Test Orb script
        run: |
          export FAKE_VALID_TOKEN=fake-valid-token
          bash src/scripts/upload.sh
        env:
          REPO_URL: ${{ github.server_url }}/${{ github.repository }}
          TOKEN: FAKE_VALID_TOKEN
          CIRCLE_JOB: test
          CIRCLE_SHA1: 948da8c01b17ac2164039f3150221d5cfcae7ecc
          FILES: zfixtures/junit_example.xml
          MERGIFY_API_SERVER: http://localhost:1080

      - name: Mockserver logs
        if: always()
        run: docker compose logs
